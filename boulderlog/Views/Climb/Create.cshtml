@model Boulderlog.Data.Models.Climb

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Climb</h4>
<hr />
<div class="row">
    <div class="col-md-4">
            <form asp-action="javascript:void(0)">
                <canvas class="placeholder" id="canvas" width="320" height="240"></canvas>
                <button id="open-camera-modal" class="btn btn-primary pt-1" data-bs-toggle="modal" data-bs-target="#cameraModal" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-camera" viewBox="0 0 16 16">
                        <path d="M15 12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h1.172a3 3 0 0 0 2.12-.879l.83-.828A1 1 0 0 1 6.827 3h2.344a1 1 0 0 1 .707.293l.828.828A3 3 0 0 0 12.828 5H14a1 1 0 0 1 1 1zM2 4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-1.172a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 9.172 2H6.828a2 2 0 0 0-1.414.586l-.828.828A2 2 0 0 1 3.172 4z" />
                        <path d="M8 11a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5m0 1a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7M3 6.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0" />
                    </svg>
                </button>
            </form>
            <form asp-action="Create">
            <div asp-validation-summary="None" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Grade" class="control-label"></label>
                <input asp-for="Grade" class="form-control" />
                <span asp-validation-for="Grade" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="HoldColor" class="control-label"></label>
                <input asp-for="HoldColor" class="form-control" />
                <span asp-validation-for="HoldColor" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Gym" class="control-label"></label>
                <input asp-for="Gym" class="form-control" />
                <span asp-validation-for="Gym" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Wall" class="control-label"></label>
                <input asp-for="Wall" class="form-control" />
                <span asp-validation-for="Wall" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="Name" type="hidden" />
                <input asp-for="UserId" type="hidden" value="@ViewData["UserId"]" />
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<!-- Modal -->
<div class="modal fade" id="cameraModal" tabindex="-1" aria-labelledby="cameraModallLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="cameraModallLabel">Camera</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <video id="video" width="320" height="240" autoplay></video>
            </div>
            <div class="modal-footer">
                <button type="button" id="capture-image" data-bs-dismiss="modal" class="btn btn-primary">Capture</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.querySelector("#open-camera-modal").addEventListener('click', async function () {
        let stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' }, audio: false });
        video.srcObject = stream;
    });

    document.querySelector("#capture-image").addEventListener('click', async function () {
        let canvas = document.querySelector("#canvas");
        canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);
        video.srcObject.getTracks()[0].stop();
        $(canvas).removeClass("placeholder");
        let image_data_url = canvas.toDataURL('image/jpeg');
        
        const headers = new Headers();
        headers.set('Content-Type', 'application/json');
        headers.set('Accept', 'application/json');

        const request = new Request('/api/images', {
            method: 'POST',
            headers: headers,
            body: JSON.stringify(image_data_url)
        });

        let response = await fetch(request);
        let body = await response.json()
        console.log(body);
        document.querySelector("#Name").value = body.id;
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
